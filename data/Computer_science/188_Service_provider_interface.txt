Service Provider Interface (SPI) is an API intended to be implemented or extended by a third party. It can be used to enable framework extension and replaceable components.


== Details ==
From Java documentation:

A service is a well-known set of interfaces and (usually abstract) classes. A service provider is a specific implementation of a service. The classes in a provider typically implement the interfaces and subclass the classes defined in the service itself. Service providers can be installed in an implementation of the Java platform in the form of extensions, that is, jar files placed into any of the usual extension directories. Providers can also be made available by adding them to the application's class path or by some other platform-specific means.

The concept can be extended to other platforms using the corresponding tools. In the Java Runtime Environment, SPIs are used in:
Java Database Connectivity
Java Cryptography Extension
Java Naming and Directory Interface
Java API for XML Processing
Java Business Integration
Java Sound
Java Image I/O
Java File Systems


== See also ==
Plug-in (computing)
Java (programming language)
Java (software platform)


== References ==


== External links ==
Replaceable Components and the Service Provider Interface (.pdf at The Software Engineering Institute CMU)
Official Java API documentation: java.util.ServiceLoader class and java.util.spi package