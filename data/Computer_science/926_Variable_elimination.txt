Variable elimination (VE) is a simple and general exact inference algorithm in probabilistic graphical models, such as Bayesian networks and Markov random fields. It can be used for inference of maximum a posteriori (MAP) state or estimation of marginal distribution over a subset of variables. The algorithm has exponential time complexity, but could be efficient in practice for the low-treewidth graphs, if the proper elimination order is used.


== Factors ==
Enabling a key reduction in algorithmic complexity, a factor 
  
    
      
        f
      
    
    {\displaystyle f}
  , also known as a potential, of variables 
  
    
      
        V
      
    
    {\displaystyle V}
   is a relation between each instantiation of 
  
    
      
        v
      
    
    {\displaystyle v}
   of variables 
  
    
      
        f
      
    
    {\displaystyle f}
   to a non-negative number, commonly denoted as 
  
    
      
        f
        (
        x
        )
      
    
    {\displaystyle f(x)}
  . A factor does not necessarily have a set interpretation. One may perform operations on factors of different representations such as a probability distribution or conditional distribution. Joint distributions often become too large to handle as the complexity of this operation is exponential. Thus variable elimination becomes more feasible when computing factorized entities.


== Basic Operations ==


=== Variable Summation ===
Algorithm 1, called sum-out (SO), or marginalization, eliminates a single variable 
  
    
      
        v
      
    
    {\displaystyle v}
   from a set 
  
    
      
        ϕ
      
    
    {\displaystyle \phi }
   of factors, and returns the resulting set of factors. The algorithm collect-relevant simply returns those factors in 
  
    
      
        ϕ
      
    
    {\displaystyle \phi }
   involving variable 
  
    
      
        v
      
    
    {\displaystyle v}
  .
Algorithm 1 sum-out(
  
    
      
        v
      
    
    {\displaystyle v}
  ,
  
    
      
        ϕ
      
    
    {\displaystyle \phi }
  )

  
    
      
        Φ
      
    
    {\displaystyle \Phi }
   = collect factors relevant to 
  
    
      
        v
      
    
    {\displaystyle v}
  

  
    
      
        Ψ
      
    
    {\displaystyle \Psi }
   = the product of all factors in 
  
    
      
        Φ
      
    
    {\displaystyle \Phi }
  

  
    
      
        τ
        =
        
          ∑
          
            v
          
        
        Ψ
      
    
    {\displaystyle \tau =\sum _{v}\Psi }
  
return 
  
    
      
        (
        ϕ
        −
        Ψ
        )
        ∪
        {
        τ
        }
      
    
    {\displaystyle (\phi -\Psi )\cup \{\tau \}}
  
Example
Here we have a joint probability distribution. A variable, 
  
    
      
        v
      
    
    {\displaystyle v}
   can be summed out between a set of instantiations where the set 
  
    
      
        V
        −
        v
      
    
    {\displaystyle V-v}
   at minimum must agree over the remaining variables. The value of 
  
    
      
        v
      
    
    {\displaystyle v}
   is irrelevant when it is the variable to be summed out. 
After eliminating 
  
    
      
        
          V
          
            1
          
        
      
    
    {\displaystyle V_{1}}
  , its reference is excluded and we are left with a distribution only over the remaining variables and the sum of each instantiation.
The resulting distribution which follows the sum-out operation only helps to answer queries that do not mention 
  
    
      
        
          V
          
            1
          
        
      
    
    {\displaystyle V_{1}}
  . Also worthy to note, the summing-out operation is commutative.


=== Factor Multiplication ===
Computing a product between multiple factors results in a factor compatible with a single instantiation in each factor.
Algorithm 2 mult-factors(
  
    
      
        v
      
    
    {\displaystyle v}
  ,
  
    
      
        ϕ
      
    
    {\displaystyle \phi }
  )

  
    
      
        Z
      
    
    {\displaystyle Z}
   = Union of all variables between product of factors 
  
    
      
        
          f
          
            1
          
        
        (
        
          X
          
            1
          
        
        )
        ,
        .
        .
        .
        ,
        
          f
          
            m
          
        
        (
        
          X
          
            m
          
        
        )
      
    
    {\displaystyle f_{1}(X_{1}),...,f_{m}(X_{m})}
  

  
    
      
        f
      
    
    {\displaystyle f}
   = a factor over 
  
    
      
        f
      
    
    {\displaystyle f}
   where 
  
    
      
        f
      
    
    {\displaystyle f}
   for all 
  
    
      
        f
      
    
    {\displaystyle f}
  
For each instantiation 
  
    
      
        z
      
    
    {\displaystyle z}
  
For 1 to 
  
    
      
        m
      
    
    {\displaystyle m}
  

  
    
      
        
          x
          
            1
          
        
        =
      
    
    {\displaystyle x_{1}=}
   instantiation of variables 
  
    
      
        
          X
          
            1
          
        
      
    
    {\displaystyle X_{1}}
   consistent with 
  
    
      
        z
      
    
    {\displaystyle z}
  

  
    
      
        f
        (
        z
        )
        =
        f
        (
        z
        )
        
          f
          
            i
          
        
        (
        
          x
          
            i
          
        
        )
      
    
    {\displaystyle f(z)=f(z)f_{i}(x_{i})}
  

return 
  
    
      
        f
      
    
    {\displaystyle f}
  
Factor multiplication is not only commutative but also associative.


== Inference ==
The most common query type is in the form 
  
    
      
        p
        (
        X
        
          |
        
        E
        =
        e
        )
      
    
    {\displaystyle p(X|E=e)}
   where 
  
    
      
        X
      
    
    {\displaystyle X}
   and 
  
    
      
        E
      
    
    {\displaystyle E}
   are disjoint subsets of 
  
    
      
        U
      
    
    {\displaystyle U}
  , and 
  
    
      
        E
      
    
    {\displaystyle E}
   is observed taking value 
  
    
      
        e
      
    
    {\displaystyle e}
  . A basic algorithm to computing p(X|E = e) is called variable elimination (VE), first put forth in.
Taken from, this algorithm computes 
  
    
      
        p
        (
        X
        
          |
        
        E
        =
        e
        )
      
    
    {\displaystyle p(X|E=e)}
   from a discrete Bayesian network B. VE calls SO to eliminate variables one by one. More specifically, in Algorithm 2, 
  
    
      
        ϕ
      
    
    {\displaystyle \phi }
   is the set C of conditional probability tables (henceforth "CPTs") for B, 
  
    
      
        X
      
    
    {\displaystyle X}
   is a list of query variables, 
  
    
      
        E
      
    
    {\displaystyle E}
   is a list of observed variables, 
  
    
      
        e
      
    
    {\displaystyle e}
   is the corresponding list of observed values, and 
  
    
      
        σ
      
    
    {\displaystyle \sigma }
   is an elimination ordering for variables 
  
    
      
        U
        −
        X
        E
      
    
    {\displaystyle U-XE}
  , where 
  
    
      
        X
        E
      
    
    {\displaystyle XE}
   denotes 
  
    
      
        X
        ∪
        E
      
    
    {\displaystyle X\cup E}
  .
Variable Elimination Algorithm VE(
  
    
      
        ϕ
        ,
        X
        ,
        E
        ,
        e
        ,
        σ
      
    
    {\displaystyle \phi ,X,E,e,\sigma }
  )
Multiply factors with appropriate CPTs While σ is not empty
Remove the first variable 
  
    
      
        v
      
    
    {\displaystyle v}
   from 
  
    
      
        σ
      
    
    {\displaystyle \sigma }
  

  
    
      
        ϕ
      
    
    {\displaystyle \phi }
   = sum-out
  
    
      
        (
        v
        ,
        ϕ
        )
      
    
    {\displaystyle (v,\phi )}
  

  
    
      
        p
        (
        X
        ,
        E
        =
        e
        )
      
    
    {\displaystyle p(X,E=e)}
   = the product of all factors 
  
    
      
        Ψ
        ∈
        ϕ
      
    
    {\displaystyle \Psi \in \phi }
  
return 
  
    
      
        p
        (
        X
        ,
        E
        =
        e
        )
        
          /
        
        
          ∑
          
            X
          
        
        p
        (
        X
        ,
        E
        =
        e
        )
      
    
    {\displaystyle p(X,E=e)/\sum _{X}p(X,E=e)}
  


== Ordering ==
Finding the optimal order in which to eliminate variables is an NP-hard problem. As such there are heuristics one may follow to better optimize performance by order:
Minimum Degree: Eliminate the variable which results in constructing the smallest factor possible.
Minimum Fill: By constructing an undirected graph showing variable relations expressed by all CPTs, eliminate the variable which would result in the least edges to be added post elimination.


== References ==