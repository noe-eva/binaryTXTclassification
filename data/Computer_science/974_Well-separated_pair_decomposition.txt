In computational geometry, a well-separated pair decomposition (WSPD) of a set of points 
  
    
      
        S
        ⊂
        
          
            R
          
          
            d
          
        
      
    
    {\displaystyle S\subset \mathbb {R} ^{d}}
  , is a sequence of pairs of sets 
  
    
      
        (
        
          A
          
            i
          
        
        ,
        
          B
          
            i
          
        
        )
      
    
    {\displaystyle (A_{i},B_{i})}
  , such that each pair is well-separated, and for each two distinct points 
  
    
      
        p
        ,
        q
        ∈
        S
      
    
    {\displaystyle p,q\in S}
  , there exists precisely one pair which separates the two.
The graph induced by a well-separated pair decomposition can serve as a k-spanner of the complete Euclidean graph, and is useful in approximating solutions to several problems pertaining to this.


== Definition ==

Let 
  
    
      
        A
        ,
        B
      
    
    {\displaystyle A,B}
   be two disjoint sets of points in 
  
    
      
        
          
            R
          
          
            d
          
        
      
    
    {\displaystyle \mathbb {R} ^{d}}
  , 
  
    
      
        R
        (
        X
        )
      
    
    {\displaystyle R(X)}
   denote the axis-aligned minimum bounding box for the points in 
  
    
      
        X
      
    
    {\displaystyle X}
  , and 
  
    
      
        s
        >
        0
      
    
    {\displaystyle s>0}
   denote the separation factor.
We consider 
  
    
      
        A
      
    
    {\displaystyle A}
   and 
  
    
      
        B
      
    
    {\displaystyle B}
   to be well-separated, if for each of 
  
    
      
        R
        (
        A
        )
      
    
    {\displaystyle R(A)}
   and 
  
    
      
        R
        (
        B
        )
      
    
    {\displaystyle R(B)}
   there exists a d-ball of radius 
  
    
      
        ρ
      
    
    {\displaystyle \rho }
   containing it, such that the two spheres have a minimum distance of at least 
  
    
      
        s
        ρ
      
    
    {\displaystyle s\rho }
  .
We consider a sequence of well-separated pairs of subsets of 
  
    
      
        S
      
    
    {\displaystyle S}
  , 
  
    
      
        (
        
          A
          
            1
          
        
        ,
        
          B
          
            1
          
        
        )
        ,
        (
        
          A
          
            2
          
        
        ,
        
          B
          
            2
          
        
        )
        ,
        …
        ,
        (
        
          A
          
            m
          
        
        ,
        
          B
          
            m
          
        
        )
      
    
    {\displaystyle (A_{1},B_{1}),(A_{2},B_{2}),\ldots ,(A_{m},B_{m})}
   to be a well-separated pair decomposition (WSPD) of 
  
    
      
        S
      
    
    {\displaystyle S}
   if for any two distinct points 
  
    
      
        p
        ,
        q
        ∈
        S
      
    
    {\displaystyle p,q\in S}
  , there exists precisely one 
  
    
      
        i
      
    
    {\displaystyle i}
  , 
  
    
      
        1
        ≤
        i
        ≤
        m
      
    
    {\displaystyle 1\leq i\leq m}
  , such that either

  
    
      
        p
        ∈
        
          A
          
            i
          
        
      
    
    {\displaystyle p\in A_{i}}
   and 
  
    
      
        q
        ∈
        
          B
          
            i
          
        
      
    
    {\displaystyle q\in B_{i}}
  , or

  
    
      
        q
        ∈
        
          A
          
            i
          
        
      
    
    {\displaystyle q\in A_{i}}
   and 
  
    
      
        p
        ∈
        
          B
          
            i
          
        
      
    
    {\displaystyle p\in B_{i}}
  .


== Construction ==


=== Split tree ===
By way of constructing a fair split tree, it is possible to construct a WSPD of size 
  
    
      
        O
        (
        
          s
          
            d
          
        
        n
        )
      
    
    {\displaystyle O(s^{d}n)}
   in 
  
    
      
        O
        (
        n
        lg
        ⁡
        n
        )
      
    
    {\displaystyle O(n\lg n)}
   time.
The general principle of the split tree of a point set S is that each node u of the tree represents a set of points Su and that the bounding box R(Su) of Su is split along its longest side in two equal parts which form the two children of u and their point set. It is done recursively until there is only one point in the set.
Let Lmax(R(X)) denote the size of the longest interval of the bounding hyperrectangle of point set X and let Li(R(X)) denote the size of the i-th dimension of the bounding hyperrectangle of point set X. We give pseudocode for the Split tree computation below.

SplitTree(S)
  Let u be the node for S
  if |S| = 1
     R(u) := R(S) // R(S) is a hyperrectangle which each side has a length of zero.
     Store in u the only point in S.
  else
    Compute R(S)
    Let the i-th dimension be the one where Lmax(R(S)) = Li(R(S))
    Split R(S) along the i-th dimension in two same-size hyperrectangles and take the points contained in these hyperrectangles to form the two sets Sv and Sw.
    v := SplitTree(Sv)
    w := SplitTree(Sw)
    Store v and w as, respectively, the left and right children of u.
    R(u) := R(S)
  return u

This algorithm runs in 
  
    
      
        O
        (
        
          n
          
            2
          
        
        )
      
    
    {\displaystyle O(n^{2})}
   time.
We give a more efficient algorithm that runs in 
  
    
      
        O
        (
        n
        lg
        ⁡
        n
        )
      
    
    {\displaystyle O(n\lg n)}
   time below. The goal is to loop over the list in only 
  
    
      
        O
        (
        n
        )
      
    
    {\displaystyle O(n)}
   operations per step of the recursion but only call the recursion on at most half the points each time.
Let Sij be the j-th coordinate of the i-th point in S such that S is sorted for each dimension and p(Sij) be the point. Also, let h(R(S)) be the hyperplane that splits the longest side of R(S) in two. Here is the algorithm in pseudo-code:

SplitTree(S, u)
  if 
    R(u) := R(S) // R(S) is a hyperrectangle which each side has a length of zero.
    Store in u the only point in S.
  else
    size := |S|
    repeat
      Compute R(S)
      R(u) := R(S)
      j : = 1
      k : = |S|
      Let the i-th dimension be the one where Lmax(R(S)) = Li(R(S))
      Sv : = ∅
      Sw : = ∅
      while Sij+1 < h(R(S)) and Sik-1 > h(R(S))
        size := size - 1
        Sv : = Sv ∪ {p(S_i^j)}
        Sw : = Sw ∪ {p(S_i^k)}
        j := j + 1
        k := k - 1
      
      Let v and w be respectively, the left and right children of u.
      if Sij+1 > h(R(S))
        Sw := S \ Sv
        u := w
        S := Sw
        SplitTree(Sv,v)
      else if Sik-1 < h(R(S))
        Sv := S \ Sw
        u := v
        S := Sv
        SplitTree(Sw,w)
    until size ≤  n⁄2
    SplitTree(S,u)

To be able to maintain the sorted lists for each node, linked lists are used. Cross-pointers are kept for each list to the others to be able to retrieve a point in constant time. In the algorithm above, in each iteration of the loop, a call to the recursion is done. In reality, to be able to reconstruct the list without the overhead of resorting the points, it is necessary to rebuild the sorted lists once all points have been assigned to their nodes. To do the rebuilding, walk along each list for each dimension, add each point to the corresponding list of its nodes, and add cross-pointers in the original list to be able to add the cross-pointers for the new lists. Finally, call the recursion on each node and his set.


=== WSPD computation ===

The WSPD can be extracted from such a split tree by calling the recursive FindPairs(v,w) function on the children of every node in the split tree. Let ul / ur denote the children of the node u. We give pseudocode for the FindWSPD(T, s) function below.

FindWSPD(T,s)
  for each node u that is not a leaf in the split tree T do
    FindPairs(ul, ur)

We give pseudocode for the FindPairs(v,w) function below.

FindPairs(v,w)
  if Sv and Sw are well-separated with respect to s 
    report pair(Sv,Sw)
  else
    if( Lmax(R(v)) ≤ Lmax(R(w)) )
      Recursively call FindPairs(v,wl) and FindPairs(v,wr)
    else
      Recursively call FindPairs(vl,w) and FindPairs(vr,w)

Combining the s-well-separated pairs from all the calls of FindPairs(v,w) gives the WSPD for separation s.

Each time the recursion tree split in two, there is one more pair added to the decomposition. So, the algorithm run-time is in the number of pairs in the final decomposition.
Callahan and Kosaraju proved that this algorithm finds a Well-separated pair decomposition (WSPD) of size 
  
    
      
        O
        (
        
          s
          
            d
          
        
        n
        )
      
    
    {\displaystyle O(s^{d}n)}
  .


== Properties ==
Lemma 1: Let 
  
    
      
        {
        A
        ,
        B
        }
      
    
    {\displaystyle \{A,B\}}
   be a well-separated pair with respect to 
  
    
      
        s
      
    
    {\displaystyle s}
  . Let 
  
    
      
        p
        ,
        
          p
          ′
        
        ∈
        A
      
    
    {\displaystyle p,p'\in A}
   and 
  
    
      
        q
        ∈
        B
      
    
    {\displaystyle q\in B}
  . Then, 
  
    
      
        
          |
        
        p
        
          p
          ′
        
        
          |
        
        ≤
        (
        2
        
          /
        
        s
        )
        
          |
        
        p
        q
        
          |
        
      
    
    {\displaystyle |pp'|\leq (2/s)|pq|}
  .
Proof: Because 
  
    
      
        p
      
    
    {\displaystyle p}
   and 
  
    
      
        
          p
          ′
        
      
    
    {\displaystyle p'}
   are in the same set, we have that 
  
    
      
        
          |
        
        p
        
          p
          ′
        
        
          |
        
        ≤
        2
        ρ
      
    
    {\displaystyle |pp'|\leq 2\rho }
   where 
  
    
      
        ρ
      
    
    {\displaystyle \rho }
   is the radius of the enclosing circle of 
  
    
      
        A
      
    
    {\displaystyle A}
   and 
  
    
      
        B
      
    
    {\displaystyle B}
  . Because 
  
    
      
        p
      
    
    {\displaystyle p}
   and 
  
    
      
        q
      
    
    {\displaystyle q}
   are in two well-separated sets, we have that 
  
    
      
        
          |
        
        p
        q
        
          |
        
        ≥
        s
        ρ
      
    
    {\displaystyle |pq|\geq s\rho }
  . We obtain that:

  
    
      
        
          
            
              
              
                
                  
                    
                      
                        |
                      
                      p
                      
                        p
                        ′
                      
                      
                        |
                      
                    
                    2
                  
                
                ≤
                ρ
                ≤
                
                  
                    
                      
                        |
                      
                      p
                      q
                      
                        |
                      
                    
                    s
                  
                
              
            
            
              
                ⇔
              
              
            
            
              
              
                
                  
                    
                      
                        |
                      
                      p
                      
                        p
                        ′
                      
                      
                        |
                      
                    
                    2
                  
                
                ≤
                
                  
                    
                      
                        |
                      
                      p
                      q
                      
                        |
                      
                    
                    s
                  
                
              
            
            
              
                ⇔
              
              
            
            
              
              
                
                
                  |
                
                p
                
                  p
                  ′
                
                
                  |
                
                ≤
                
                  
                    2
                    s
                  
                
                
                  |
                
                p
                q
                
                  |
                
              
            
          
        
      
    
    {\displaystyle {\begin{aligned}&{\frac {|pp'|}{2}}\leq \rho \leq {\frac {|pq|}{s}}\\\Leftrightarrow &\\&{\frac {|pp'|}{2}}\leq {\frac {|pq|}{s}}\\\Leftrightarrow &\\&|pp'|\leq {\frac {2}{s}}|pq|\\\end{aligned}}}
  
Lemma 2: Let 
  
    
      
        {
        A
        ,
        B
        }
      
    
    {\displaystyle \{A,B\}}
   be a well-separated pair with respect to 
  
    
      
        s
      
    
    {\displaystyle s}
  . Let 
  
    
      
        p
        ,
        
          p
          ′
        
        ∈
        A
      
    
    {\displaystyle p,p'\in A}
   and 
  
    
      
        q
        ,
        
          q
          ′
        
        ∈
        B
      
    
    {\displaystyle q,q'\in B}
  . Then, 
  
    
      
        
          |
        
        
          p
          ′
        
        
          q
          ′
        
        
          |
        
        ≤
        (
        1
        +
        4
        
          /
        
        s
        )
        
          |
        
        p
        q
        
          |
        
      
    
    {\displaystyle |p'q'|\leq (1+4/s)|pq|}
  .
Proof: By the triangle inequality, we have:

  
    
      
        
          |
        
        
          p
          ′
        
        
          q
          ′
        
        
          |
        
        ≤
        
          |
        
        
          p
          ′
        
        p
        
          |
        
        +
        
          |
        
        p
        q
        
          |
        
        +
        
          |
        
        q
        
          q
          ′
        
        
          |
        
      
    
    {\displaystyle |p'q'|\leq |p'p|+|pq|+|qq'|}
  
From Lemma 1, we obtain:

  
    
      
        
          
            
              
                
                  |
                
                
                  p
                  ′
                
                
                  q
                  ′
                
                
                  |
                
              
              
                
                ≤
                (
                2
                
                  /
                
                s
                )
                
                  |
                
                p
                q
                
                  |
                
                +
                
                  |
                
                p
                q
                
                  |
                
                +
                (
                2
                
                  /
                
                s
                )
                
                  |
                
                p
                q
                
                  |
                
              
            
            
              
              
                
                =
                (
                1
                +
                4
                
                  /
                
                s
                )
                
                  |
                
                p
                q
                
                  |
                
              
            
          
        
      
    
    {\displaystyle {\begin{aligned}|p'q'|&\leq (2/s)|pq|+|pq|+(2/s)|pq|\\&=(1+4/s)|pq|\end{aligned}}}
  


== Applications ==
The well-separated pair decomposition has application in solving a number of problems. WSPD can be used to:
Solve the closest pair problem in 
  
    
      
        O
        (
        n
        lg
        ⁡
        n
        )
      
    
    {\displaystyle O(n\lg n)}
   time.
Solve the k-closest pairs problem in 
  
    
      
        O
        (
        n
        lg
        ⁡
        n
        +
        k
        )
      
    
    {\displaystyle O(n\lg n+k)}
   time.
Solve the all-nearest neighbors problem in 
  
    
      
        O
        (
        n
        lg
        ⁡
        n
        )
      
    
    {\displaystyle O(n\lg n)}
   time.
Provide a 
  
    
      
        (
        1
        −
        ϵ
        )
      
    
    {\displaystyle (1-\epsilon )}
  -approximation of the diameter of a point set in 
  
    
      
        O
        (
        n
        lg
        ⁡
        n
        )
      
    
    {\displaystyle O(n\lg n)}
   time.
Directly induce a t-spanner of a point set.
Provide a t-approximation of the Euclidean minimum spanning tree in d dimensions in 
  
    
      
        O
        (
        n
        lg
        ⁡
        n
        )
      
    
    {\displaystyle O(n\lg n)}
   time.
Provide a 
  
    
      
        (
        1
        +
        ϵ
        )
      
    
    {\displaystyle (1+\epsilon )}
  -approximation of the Euclidean minimum spanning tree in d dimensions in 
  
    
      
        O
        (
        n
        lg
        ⁡
        n
        +
        (
        
          ϵ
          
            −
            2
          
        
        
          lg
          
            2
          
        
        ⁡
        
          
            1
            ϵ
          
        
        )
        n
        )
      
    
    {\displaystyle O(n\lg n+(\epsilon ^{-2}\lg ^{2}{\frac {1}{\epsilon }})n)}
   time.


== References ==